#!/bin/python3

# Script d'interface entre INGInious et l'exercice modules_output
# Auteur: François De Keersmaeker
# Licence: GPLv3

import subprocess, shlex, os
from inginious import feedback, rst, input

# Switch working directory to student/
os.chdir("student")

# Global score and feedback
score = 0
feedback_str = ""

# Fetch and save the student code into a file for correction
input.parse_template("output.txt.tpl", "output.txt")

# Compilation of solution files, to execute and compare output
p = subprocess.Popen(shlex.split("make"), stderr=subprocess.STDOUT, stdout=subprocess.PIPE)
make_output = p.communicate()[0].decode('utf-8')

if p.returncode:
    # Compilation failed, somehow
    feedback.set_tag("not_compile", True)
    feedback.set_global_result("failed")
    feedback.set_global_feedback("Une erreur est survenue lors de la compilation des fichiers source. Veuillez contacter l'administrateur du cours.")
    exit(0)

# Compare output files
with open("output.txt", 'r') as answer:
    with open("output_sol.txt", 'r') as solution:
        lines_a = answer.readlines()
        lines_s = solution.readlines()
        length = len(lines_s)
        for i in range(length):
            if lines_a[i].strip() == lines_s[i].strip():
                score += 100 / length
            else:
                feedback_str += f"La ligne {i+1} n'est pas correcte.\n\n"

if len(feedback_str) == 0:
    feedback_str = "La sortie est correcte."

# Set problem feedback
feedback.set_problem_result("success" if score >= 100 else "failed", "output")
feedback.set_problem_feedback(feedback_str, "output")

# Remove source files
subprocess.run("rm -rf Makefile *.txt *.c *.tpl *.h *.o", shell=True)

# Set global feedback
feedback.set_grade(score)
feedback.set_global_result("success" if score >= 100 else "failed")
feedback.set_global_feedback("Bien joué !" if score >= 100 else "Il y a une erreur dans votre solution")
