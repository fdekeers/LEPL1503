accessible: true
author: Mathieu Xhonneux & Maxime Mawait
context: |-
    Pointers to functions can be used to handle functions in a dynamic fashion, and will be of great importance later in this course. It is hence important to grasp how they work.

    In this exercise, you will code a function which receives pointers to two functions, to determine if these functions are equivalent. Two functions are considered to be equivalent if they always produce the same output for the same input.

    The functions passed by pointers will be of the form ``uint8_t func(uint8_t n)``.
environment: cpp
evaluate: best
groups: false
input_random: '0'
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[S4] Comparing functions '
network_grading: false
order: 31
problems:
    cmp_func:
        header: |+
            Write the function ``cmp_func`` (prototype and body), which receives two pointers to functions (described above), and returns an ``int``, set to ``1`` if the functions are equivalent and ``0`` otherwise. Compare the two functions by testing their values for all possible ``uint8_t`` (i.e. from ``0`` to ``255``)

        type: code
        language: c
        default: ''
        name: Compare functions
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: q1
        type: 0
        name: Q1
        description: q1 is correct
        visible: false
    '1':
        type: 1
        visible: true
        name: Timeout
        description: Your code exceeded the maximum allowed time.
        id: timeout
    '2':
        name: Segmentation Fault
        type: 1
        description: Your code produced a segmentation fault.
        visible: true
        id: sigsegv
    '3':
        name: Not compile
        id: not_compile
        type: 1
        visible: true
        description: Your code does not compile.
    '4':
        name: Memory Exceeded
        id: memory
        description: Your code exceeded the memory.
        visible: true
        type: 1
    '5':
        visible: true
        type: 1
        name: Floating Point Exception
        description: Your code produced a floating point exception.
        id: sigfpe
    '6':
        id: double_free
        description: Your code produced a double free.
        name: Double free
        type: 1
        visible: true
    '7':
        visible: true
        id: banned_funcs
        type: 1
        description: Your code used some banned functions.
        name: Banned functions
    '8':
        type: 1
        name: Cppcheck fails
        id: cppcheck
        visible: true
        description: Your code does not compile with cppcheck.
    '10':
        name: Level 1
        description: Level 1
        visible: true
        type: 2
        id: ''
    '9':
        description: ''
        type: 2
        visible: true
        name: S4
        id: ''
weight: 1.0
