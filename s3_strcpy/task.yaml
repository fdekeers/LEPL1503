accessible: true
author: Nicolas Rybowski
context: |-
    The classic function ``char *strcpy(char *destination, const char *source);`` `strcpy(3) <https://linux.die.net/man/3/strcpy>`_ needs a destination buffer where the source string is copied. We ask you to code a function which allocates a buffer itself, and then performs the copy.

    The use of copy functions as ``memcpy`` or ``strcpy`` is not allowed.

    *Hint* : use `malloc(3) <https://sites.uclouvain.be/SystInfo/manpages/man3/malloc.3.html>`_. Don't forget that malloc can fail sometimes...
environment: cpp
evaluate: best
groups: false
input_random: '0'
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[S3] Improved strcpy '
network_grading: false
order: 19
problems:
    strcpy_impl:
        header: |
            Write the body of the function *buf_strcpy*.

            .. code-block:: c

                /*
                * Creates a buffer that has the same size as src, and copies the content of src to this buffer.
                *
                * @src: string to be copied
                * @return: return pointer. if src == NULL or in case of error, return NULL
                *
                * Remember that strings are terminated with '\0' and that strlen("abc") returns 3 even if 4 bytes are required to store this string.
                */
                char *buf_strcpy(const char *src) {
        language: c
        default: ''
        type: code
        name: buf_strcpy
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 0
        name: Q1
        description: q1 is correct
        id: q1
        visible: false
    '1':
        visible: true
        type: 1
        description: Your code exceeded the maximum allowed time.
        id: timeout
        name: Timeout
    '2':
        visible: true
        type: 1
        id: sigsegv
        name: Segmentation Fault
        description: Your code produced a segmentation fault.
    '3':
        description: Your code does not compile.
        visible: true
        name: Not compile
        type: 1
        id: not_compile
    '4':
        type: 1
        visible: true
        id: memory
        description: Your code exceeded the memory.
        name: Memory Exceeded
    '5':
        name: Floating Point Exception
        id: sigfpe
        type: 1
        description: Your code produced a floating point exception.
        visible: true
    '6':
        name: Double free
        id: double_free
        description: Your code produced a double free.
        visible: true
        type: 1
    '7':
        description: Your code used some banned functions.
        id: banned_funcs
        type: 1
        name: Banned functions
        visible: true
    '8':
        type: 1
        visible: true
        id: cppcheck
        description: Your code does not compile with cppcheck.
        name: Cppcheck fails
    '9':
        id: malloc_fail_handling
        description: Wrong return value when malloc call fails.
        type: 1
        name: Malloc fail handling
        visible: false
    '10':
        description: ''
        name: S3
        type: 2
        visible: true
        id: ''
    '11':
        visible: true
        name: Malloc
        type: 2
        description: Task about malloc
        id: ''
    '12':
        type: 2
        description: Level 2
        visible: true
        name: Level 2
        id: ''
weight: 1.0
