accessible: true
author: Mathieu Xhonneux, Nicolas Rybowski
context: |-
    You have a linked list. Each element of the list is a ``struct node``.

    .. code-block:: c

        struct node {
            struct node *next;
            int hash;
            int id;
            char name[20];
            char buffer[100];
            unsigned int timestamp;
            char acl;
            short flow;
            char *parent;
            void *fifo;
        };
environment: pyjavacpp
evaluate: best
groups: false
input_random: '0'
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[S4] Filtering a linked list '
network_grading: false
order: 32
problems:
    includes:
        language: ''
        type: code
        default: ''
        header: 'Please insert here the ``#include`` that are required to use the
            functions that you use to answer this question. These includes are specified
            in the man pages of the functions that you use. '
        name: Includes
    filter:
        default: ''
        language: c
        name: Filtering
        header: |-
            We want to filter this list and extract the elements with an even index (the index starts at 0, hence the first, the third, the fifth, ... elements of the linked list have to be taken), without modifying the initial list. In other words, you should create an other list (in parallel of the initial one) that contains the nodes you want to keep and return the head of this new list you created.

            Write the body of the function ``pair_filter``.

            Hint : You should use `memcpy(3) <https://sites.uclouvain.be/SystInfo/manpages/man3/memcpy.3.html>`_ for this question

            .. code-block:: c

                /* pair_filter
                 * Make a copy of the linked list starting at head,
                 * only taking the elements with an even index
                 *
                 * @head : head of a linked list, possibly NULL
                 * @return: pointer to the filtered linked list, return NULL if error or if head == NULL
                 */
                struct node *pair_filter(struct node *head) {
        type: code
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 0
        name: Q1
        description: q1 is correct
        id: q1
        visible: false
    '1':
        visible: true
        type: 1
        description: Your code exceeded the maximum allowed time.
        id: timeout
        name: Timeout
    '10':
        description: Your code produced a floating point exception.
        name: Floating Point Exception
        id: sigfpe
        type: 1
        visible: true
    '11':
        visible: true
        id: double_free
        name: Double free
        description: Your code produced a double free.
        type: 1
    '12':
        type: 1
        description: Your code used some banned functions.
        id: banned_funcs
        visible: true
        name: Banned functions
    '13':
        type: 1
        description: Your code does not compile with cppcheck.
        visible: true
        id: cppcheck
        name: Cppcheck fails
    '14':
        name: Not malloc once
        type: 1
        id: not_malloc_once
        description: The malloc() functions was not called exactly once.
        visible: false
    '2':
        type: 1
        id: wrong_alloc_size
        name: Wrong allocation size
        description: The allocated memory doesn't have the correct size.
        visible: false
    '3':
        description: Your function returns an error in normal case.
        type: 1
        id: error_normal_case
        name: Error normal case
        visible: false
    '4':
        type: 1
        id: wrong_list_size
        description: The list has not the expected size.
        name: Wrong list size
        visible: false
    '5':
        name: Bad Args handling
        id: wrong_args_handling
        type: 1
        description: Wrong return value when wrong args.
        visible: false
    '6':
        name: Incorrect list
        id: not_expected_list
        description: The linked list does not correspond to the waited one.
        type: 1
        visible: false
    '7':
        description: Your code produced a segmentation fault.
        id: sigsegv
        type: 1
        name: Segmentation Fault
        visible: true
    '8':
        type: 1
        visible: true
        id: not_compile
        description: Your code does not compile.
        name: Not compile
    '9':
        visible: true
        id: memory
        description: Your code exceeded the memory.
        type: 1
        name: Memory Exceeded
    '15':
        name: S4
        description: ''
        type: 2
        visible: true
        id: ''
    '16':
        description: Task about pointers and their use
        type: 2
        name: Pointer
        visible: true
        id: ''
    '17':
        type: 2
        description: Task about malloc
        visible: true
        name: Malloc
        id: ''
    '18':
        visible: true
        type: 2
        name: Struct
        description: Task about structures and their use
        id: ''
    '19':
        name: Level 4
        description: Level 4
        type: 2
        visible: true
        id: ''
weight: 1.0
