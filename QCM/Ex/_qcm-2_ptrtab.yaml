accessible: True
author: 
context: |
    La matière couverte cette semaine la section relative aux `types de données <http://sites.uclouvain.be/SystInfo/notes/Theorie/html/C/datatypes.html>` (jusque et y compris la section relative aux `expressions de manipulation de bits <http://sinf1252.info.ucl.ac.be/Theorie/C/datatypes/#les-expressions-de-manipulation-de-bits>`
environment: mcq
evaluate: best
groups: False
input_random: 0
limits:
    output: 2
    memory: 100
    time: 30
name: Questions à choix multiples
network_grading: False
problems:
    ptrtab:
        choices:
        -   text: |


                - l'expression ``tab[i]`` correspond à la même valeur dans le tableau que ``*(tab+i)`` lorsque ``0<=i<29``
                - l'assignation ``ptr=(tab+i)`` est valide et après cette assignation, ``*ptr`` retourne la même valeur que ``tab[i]`` lorsque ``0<=i<29``


            valid: True
            feedback: |
        -   text: |

                - l'expression ``tab[0]`` correspond à la même valeur dans le tableau que ``*(tab)``
                - l'assignation ``ptr=(tab+i)`` est valide et après cette assignation, ``*ptr`` retourne la même valeur que ``tab[i]`` lorsque ``0<=i<29``


            valid: True
            feedback: |
        -   text: |

                - l'expression ``tab[i]`` correspond à la même valeur dans le tableau que ``*(tab+i)`` lorsque ``0<=i<29``
                - l'assignation ``tab=(tab+i)`` est valide et après cette assignation, ``*tab`` retourne le ième élément du tableau lorsque ``0<=i<29``

            valid: False
            feedback: |

        -   text: |

                - l'expression ``tab[0]`` correspond à la même valeur dans le tableau que ``&(tab)``
                - l'assignation ``tab=(tab+i)`` est valide et après cette assignation, ``*tab`` retourne le ième élément du tableau lorsque ``0<=i<29``

            valid: False
            feedback: |

        -   text: |

                - l'expression ``tab[i]`` correspond à la même valeur dans le tableau que ``*(tab)+i`` lorsque ``0<=i<29``
                - l'assignation ``ptr=(tab)`` est valide et après cette assignation, ``*(ptr+i)`` retourne le ième élément du tableau lorsque ``0<=i<29``

            valid: False
            feedback: |



        header: |
            Considérons le tableau ``tab`` déclaré comme suit :


            .. code-block:: c


               #define SIZE 30
               int tab[SIZE];
               int *ptr;

            Dans une architecture 32 bits, un seul des groupes d'affirmations ci-dessous est vrai. Lequel ?


        limit: 5
        name:  Pointeurs et tableaux
        multiple: True
        type: multiple_choice
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
