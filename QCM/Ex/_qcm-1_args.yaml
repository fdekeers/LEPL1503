accessible: True
author: 
context: |
    Ces questions ont pour objectif de vous permettre de tester vous-même votre compréhension de la matière couverte par cette mission de mise en route. Elles supposent que vous avez lu le premier chapitre du syllabus contenant l'introduction à Unix et au langage C.
environment: mcq
evaluate: best
groups: False
input_random: 0
limits:
    output: 2
    memory: 100
    time: 30
name: Questions à choix multiples
network_grading: False
problems:
    args:
        choices:
        -   text: |

                - Lors de l'exécution de la fonction ``main``, ``argc`` est initialisé au nombre d'arguments passés au programme (y compris le nom de l'exécutable lui-même).
                - Lors de l'exécution de la fonction ``main``, le tableau ``argv[]`` contient dans ``argv[0]`` le nom du programme, dans ``argv[1]`` le premier argument, etc.
                - La fonction ``atoi`` permet de convertir une chaîne de caractères en l'entier équivalent.

            valid: True
            feedback: |

        -   text: |


                - Lors de l'exécution de la fonction ``main``, ``argc`` est initialisé à zéro.
                - Lors de l'exécution de la fonction ``main``, le tableau ``argv[]`` contient dans ``argv[0]`` le premier argument, dans ``argv[1]`` le second argument, etc.
                - La fonction ``atoi`` calcule la taille de son argument.

            valid: False
            feedback: |

        -   text: |

                - Lors de l'exécution de la fonction ``main``, ``argc`` est le nombre maximum d'arguments que l'on peut lui passer.
                - Lors de l'exécution de la fonction ``main``, le tableau ``argv[]`` contient dans ``argv[0]`` le premier argument, dans ``argv[1]`` le second argument, etc.
                - La fonction ``atoi`` doit prendre comme argument une chaîne de caractères qui ne contient que des chiffres.

            valid: False
            feedback: |

        -   text: |

                - Lors de l'exécution de la fonction ``main``, le tableau ``argv[]`` contient dans ``argv[0]`` le premier argument, dans ``argv[1]`` le second argument, etc.
                - La fonction ``atoi`` permet de convertir une chaîne de caractères en l'entier équivalent.

            valid: False
            feedback: |


        header: |
            Considérons le programme C ci-dessous qui permet de manipuler les arguments passés en ligne de commande.


            .. code-block:: c



               #include <stdio.h>
               #include <stdlib.h>
               int main(int argc, const char *argv[])
               {
                 int a = atoi(argv[1]);
                 printf("%d\n", a);
               }

            Parmi les groupes d'affirmations ci-dessous, un seul ne contient que des affirmations qui sont toutes vraies. Lequel ?


        limit: 4
        name: Arguments passés à un programme C
        multiple: False
        type: multiple_choice
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
