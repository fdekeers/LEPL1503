Soit un module ``module``, dont l'interface est définie par le fichier header suivant, nommé ``module.h``:

.. code-block:: c

  int func_c();
  int func_d();

et dont l'implémentation est fournie par le fichier source suivant, nommé ``module.c``:

.. code-block:: c

  #include "module.h"

  int a = 0;
  static int b = 1;

  int func_c() {
    int c = 2;
    return c;
  }

  int func_d() {
    static int d = 3;
    return d;
  }

  static int func_e() {
    int e = 4;
    return e;
  }

  int func_f() {
    int f = 5;
    return f;
  }


Les questions suivantes traitent de la visibilité des variables et fonctions de ce module,
depuis un fichier ``main.c`` qui inclut correctement le fichier header ``module.h``.
Note: une variable ou fonction est "visible" si on peut y accéder depuis un autre fichier par son nom.

1. La variable ``a`` est-elle visible depuis le fichier ``main.c`` ?
Oui (mais nécessite ``extern``)

2. La variable ``b`` est-elle visible depuis le fichier ``main.c`` ?
Non

3. La variable ``d`` est-elle visible depuis le fichier ``main.c`` ?
Non

4. La fonction ``func_c`` est-elle visible depuis le fichier ``main.c`` ?
Oui

5. La fonction ``func_d`` est-elle visible depuis le fichier ``main.c`` ?
Oui

6. La fonction ``func_e`` est-elle visible depuis le fichier ``main.c`` ?
Non

7. La fonction ``func_f`` est-elle visible depuis le fichier ``main.c`` ?
Oui (mais warning car non définie dans header)
