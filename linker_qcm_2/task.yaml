accessible: true
author: François De Keersmaeker
categories: []
contact_url: ''
context: |-
    Soit un module ``module``, dont l'interface est définie par le fichier header suivant, nommé ``module.h``:

    .. code-block:: c

      int func_c();
      int func_d();

    et dont l'implémentation est fournie par le fichier source suivant, nommé ``module.c``:

    .. code-block:: c

      #include "module.h"

      int a = 0;
      static int b = 1;

      int func_c() {
        int c = 2;
        return c;
      }

      int func_d() {
        static int d = 3;
        return d;
      }

      static int func_e() {
        int e = 4;
        return e;
      }

      int func_f() {
        int f = 5;
        return f;
      }


    Les questions suivantes traitent de la visibilité des variables et fonctions de ce module, depuis un fichier ``main.c`` qui inclut correctement le fichier header ``module.h``.
    Note: une variable ou fonction est "visible" si on peut y accéder depuis un autre fichier par son nom.
environment_id: mcq
environment_parameters: {}
environment_type: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
name: Décomposition d'un programme en modules - QCM 1
network_grading: false
order: 101
problems:
    1_var_a:
        type: multiple_choice
        name: Variable a
        header: La variable ``a`` est-elle visible depuis le fichier ``main.c`` ?
        limit: 0
        success_message: La variable est visible, mais nécessite d'être préfixée par
            ``extern``, puisqu'elle est définie dans un autre fichier.
        choices:
        -   text: Oui
            valid: true
        -   text: Non
    2_var_b:
        type: multiple_choice
        name: Variable b
        header: La variable ``b`` est-elle visible depuis le fichier ``main.c`` ?
        limit: 0
        success_message: La variable n'est pas visible, car elle est ``static``, et
            donc visible uniquement dans son fichier source.
        choices:
        -   text: Oui
        -   text: Non
            valid: true
    3_var_d:
        type: multiple_choice
        name: Variable d
        header: La variable ``d`` est-elle visible depuis le fichier ``main.c`` ?
        limit: 0
        success_message: La variable n'est pas visible, car elle est locale à la fonction
            qui la définit.
        choices:
        -   text: Oui
        -   text: Non
            valid: true
    4_func_c:
        type: multiple_choice
        name: Fonction func_c
        header: La fonction ``func_c`` est-elle visible depuis le fichier ``main.c``
            ?
        limit: 0
        success_message: La fonction est visible, car le module est importé et la
            fonction n'est pas ``static``.
        choices:
        -   text: Oui
            valid: true
        -   text: Non
    5_func_d:
        type: multiple_choice
        name: Fonction func_d
        header: La fonction ``func_d`` est-elle visible depuis le fichier ``main.c``
            ?
        limit: 0
        success_message: La fonction est visible, car le module est importé et la
            fonction n'est pas ``static``.
        choices:
        -   text: Oui
            valid: true
        -   text: Non
    6_func_e:
        type: multiple_choice
        name: Fonction func_e
        header: La fonction ``func_e`` est-elle visible depuis le fichier ``main.c``
            ?
        limit: 0
        success_message: La fonction n'est pas visible, car elle est ``static``, et
            donc visible uniquement dans son fichier source.
        choices:
        -   text: Oui
        -   text: Non
            valid: true
    7_func_f:
        type: multiple_choice
        name: Fonction func_f
        header: La fonction ``func_f`` est-elle visible depuis le fichier ``main.c``
            ?
        limit: 0
        success_message: La fonction est visible, car le module est importé et la
            fonction n'est pas ``static``. Cependant, elle n'est pas déclarée dans
            le fichier header, ce qui est une mauvaise pratique et produit un *warning*
            lors de la compilation. Il vaut mieux toujours déclarer dans le fichier
            header toutes les fonctions qui sont utilisées par des autres fichiers.
        choices:
        -   text: Oui
            valid: true
        -   text: Non
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
